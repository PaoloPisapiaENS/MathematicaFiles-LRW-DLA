(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



SetOptions[$FrontEndSession,NotebookAutoSave->True]
NotebookSave[]
InitializationValue[$Initialization] = Hold[$HistoryLength = 2];


(* ::Input::Initialization:: *)
ClearAll[ToContinuum];
Options[ToContinuum]={"print"->False,"justSmallestOrder"->False,"\[Gamma]gterms"->True,"CollectLaplacian"->True,"\[Delta]\[Psi]"->{\[Psi]s[a__]:>1/\[Kappa]+\[Delta]\[Psi]s[a]},"\[Kappa]Order"->6};

ToContinuum[\[Mu]Action_,OptionsPattern[]]:=Module[{\[CapitalMu]Action,\[Kappa]order,purificationRule,purifiedAction,freeAction,gAction,\[Gamma]Action,\[Gamma]gAction},
Clear[g];
\[CapitalMu]Action=V[E^(-\[Phi][1,Subscript[t, 1],Subscript[k, 1]] \[Phi]s[1,Subscript[t, 1],Subscript[k, 1]]-\[Psi][1,Subscript[t, 1],Subscript[ll, 1]]\[Psi]s[1,Subscript[t, 1],Subscript[ll, 1]]-2 \[Chi][1,Subscript[t, 1],Subscript[i, 1],Subscript[\[Alpha], 1]] \[Chi]s[1,Subscript[t, 1],Subscript[i, 1],Subscript[\[Alpha], 1]])]*\[Mu]Action/.{(*V[a_]/;(FreeQ[a,\[Phi][1,___]]&&FreeQ[a,\[Xi][1,___]]):>1,*)R[___]:>1,\[Phi][a__,b_]->\[Phi][a],\[Phi]s[a__,b_]->\[Phi]s[a],\[Psi][a__,b_]->\[Psi][a],\[Psi]s[a__,b_]->\[Psi]s[a],\[Xi][a__,b_]->\[Xi][a],\[Xi]s[a__,b_]->\[Xi]s[a]}/.V[a_]:>a//Expand;
\[CapitalMu]Action=\[CapitalMu]Action/.{\[Chi]s[a___]:>\[Chi]s[a]/2}//Simplify;  (* TO TAKE CARE OF THE Subscript[r, x]*)
If[OptionValue["print"],Print[Style["\t Extracting terms for point \!\(\*SubscriptBox[\(x\), \(1\)]\):\n ",{Blue}], \[CapitalMu]Action,"\n"]];

\[CapitalMu]Action=\[CapitalMu]Action//.F_[1,Subscript[t, 1],c___]:>\[Kappa] F[x,t,c];
\[CapitalMu]Action=\[CapitalMu]Action//.F_[1,Subscript[t, 2],c___]:>\[Kappa] F[x,t+\[Delta]t,c];
\[CapitalMu]Action=\[CapitalMu]Action//.F_[a_,Subscript[t, 2],c___]*G_[a_,Subscript[t, 1],d___]/;( FreeQ[a,x]):>\[Kappa]^2 F[x+\[Delta]x,t+\[Delta]t,c]*G[x+\[Delta]x,t,d]/2+\[Kappa]^2 F[x-\[Delta]x,t+\[Delta]t,c]*G[x-\[Delta]x,t,d]/2;
\[CapitalMu]Action=\[CapitalMu]Action//.F_[a_,Subscript[t, 1],c___]/;( FreeQ[a,x]):>\[Kappa] F[x+\[Delta]x,t,c]/2+\[Kappa] F[x-\[Delta]x,t,c]/2;
\[CapitalMu]Action=\[CapitalMu]Action//.F_[a_,Subscript[t, 2],c___]/;( FreeQ[a,x]):>\[Kappa] F[x+\[Delta]x,t+\[Delta]t,c]/2+\[Kappa] F[x-\[Delta]x,t+\[Delta]t,c]/2;
If[OptionValue["print"],Print[Style["\t Converting them to x,x+\[Delta]x,x-\[Delta]x,t,t+\[Delta]t and \[Kappa]:\n ",{Blue}], \[CapitalMu]Action,"\n"]];

\[CapitalMu]Action=\[CapitalMu]Action/.OptionValue["\[Delta]\[Psi]"];
If[OptionValue["print"],Print[Style["\t Expanding \[Psi]s with rule: ",{Blue}],Style[OptionValue["\[Delta]\[Psi]"],{Blue}],Style["\t S = ",{Blue}],Expand[\[CapitalMu]Action] ,"\n"]];

\[CapitalMu]Action=Normal@Series[\[CapitalMu]Action,{\[Delta]t,0,1}];
If[OptionValue["print"],Print[Style["\t Expanding first order in time:\n ",{Blue}], \[CapitalMu]Action,"\n"]];

\[Kappa]order=OptionValue["\[Kappa]Order"];
\[CapitalMu]Action=Series[-Log[Expand[\[CapitalMu]Action]],{\[Kappa],0,\[Kappa]order},{\[Delta]t,0,1},{\[Delta]x,0,2}];
\[CapitalMu]Action=Normal@\[CapitalMu]Action(*/.{V[1]->1,V'[_]->1,V''[_]->1,V'''[_]->1}*);
If[OptionValue["print"],Print[Style["\t Expanding order \[Kappa]= ",{Blue}],Style[\[Kappa]order,{Blue}],Style[" in the fields, first order in time and second order in space:\n \t S = ",{Blue}],Expand[\[CapitalMu]Action] ,"\n"]];(*Replace[Expand[\[CapitalMu]Action],a_/;(FreeQ[a,D[\[Phi][x,t],x]]):>0,1]*)

purificationRule={\[Delta]t \[Delta]x->0,\[Delta]x \[Delta]x->0,Subscript[\[Lambda], _]->0};
purifiedAction=Expand[\[CapitalMu]Action]/.purificationRule;
If[OptionValue["print"],Print[Style["\t Action purified with the rule ",{Blue}],Style[purificationRule,{Blue}],Style["\n \t S = ",{Blue}], purifiedAction,"\n"]];

(* Free action *)
freeAction= \[CapitalMu]Action/.{\[Kappa]^n_/;n>2:>0}//Expand;
Print[Style["\t Free action \!\(\*SubscriptBox[\(S\), \(\(0\)\(\\\ \)\)]\)= ",{Blue,Bold}],freeAction];
Print[Style["\t Mass terms \!\(\*SubscriptBox[\(S\), \(\(m\)\(\\\ \)\)]\)= ",{Blue,Bold}],(freeAction-(freeAction/.Subscript[\[Lambda], _]->0/.\[CapitalLambda]->0)),"\n"];

(* g-interaction action *)
gAction=\[CapitalMu]Action/.{\[Kappa]^n_/;(n<=2 || If[OptionValue["justSmallestOrder"],n>=5,False]):>0,\[Gamma]->0}//Expand;

gAction=Collect[gAction,{\[Kappa]^2,\[Kappa]^4,\[Kappa]^6}];
If[OptionValue["print"],Print[Style["\t \[Gamma]=0, g-interaction action \!\(\*SubscriptBox[\(S\), \(\(g\)\(\\\ \)\)]\)= ",{Blue}],gAction/.{\[Kappa]^3->\[Kappa]^3 g,\[Kappa]^4->\[Kappa]^4 g},"\n"]];
Print[Style["\t \[Gamma]=0, g-interaction action after purification with ",{Blue,Bold}],Style[{\[Delta]t->0,\[Delta]x->0,Subscript[\[Lambda], _]->0},{Blue}],Style["\n \!\(\*SubscriptBox[\(S\), \(\(g\)\(\\\ \)\)]\)-> ",{Blue,Bold}],(gAction/.{\[Kappa]^3->\[Kappa]^3 g,\[Kappa]^4->\[Kappa]^4 g})/.{\[Delta]t->0,\[Delta]x->0,Subscript[\[Lambda], _]->0},"\n"];
{\[Delta]t->1,\[Delta]x->1,\[Kappa]->1};

(* \[Gamma] branching action *)
\[Gamma]Action=\[CapitalMu]Action-freeAction-gAction/.{\[Kappa]^5->0,\[Kappa]^6->0,\[Kappa]^7->0}//Expand;
If[OptionValue["CollectLaplacian"],
\[Gamma]Action=\[Gamma]Action/.{ \[Chi]s[x,t,1,1]  \!\(\*SuperscriptBox[\(\[Phi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"2", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t]:>DD[\[Chi]s[x,t,1,1]  \[Phi]s[x,t]]-\[Phi]s[x,t]  \!\(\*SuperscriptBox[\(\[Chi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t,1,1]-2\!\(\*SuperscriptBox[\(\[Phi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"1", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t]  \!\(\*SuperscriptBox[\(\[Chi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t,1,1]}
];
\[Gamma]Action=Collect[\[Gamma]Action,{\[Gamma] Subscript[\[Lambda], _],\[Gamma] \[Phi][x,t],\[Delta]x \[Delta]x},FullSimplify];
If[OptionValue["print"],Print[Style["\t Barnching action \!\(\*SubscriptBox[\(S\), \(\(\[Gamma]\)\(\\\ \)\)]\)= ",{Blue}],\[Gamma]Action,"\n"]];
Print[Style["\t Barnching action after purification with ",{Blue,Bold}],Style[{\[Delta]t->0},{Blue}],Style["\n \!\(\*SubscriptBox[\(S\), \(\(\[Gamma]\)\(\\\ \)\)]\)-> ",{Blue,Bold}],\[Gamma]Action/.{\[Delta]t->0},"\n"];

If[OptionValue["\[Gamma]gterms"],
(* \[Gamma]g action *)
\[Gamma]gAction=Expand[\[CapitalMu]Action-freeAction-gAction/. {\[Kappa]^3->0,\[Kappa]^4->0,\[Gamma]^2->0}];\[Gamma]gAction=\[Gamma]gAction/. {\[Chi]s[x,t,1,1] \!\(\*SuperscriptBox[\(\[Phi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"2", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t]:>DD[\[Chi]s[x,t,1,1] \[Phi]s[x,t]]-\[Phi]s[x,t] \!\(\*SuperscriptBox[\(\[Chi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"2", ",", "0", ",", "0", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t,1,1]-2 \!\(\*SuperscriptBox[\(\[Phi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"1", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t] \!\(\*SuperscriptBox[\(\[Chi]s\), 
TagBox[
RowBox[{"(", 
RowBox[{"1", ",", "0", ",", "0", ",", "0"}], ")"}],
Derivative],
MultilineFunction->None]\)[x,t,1,1]};\[Gamma]gAction=Collect[\[Gamma]gAction,{\[Gamma] \[Phi][x,t],\[Delta]x \[Delta]x,\[Phi]s[x,t]\[Chi]s[x,t,1,1],\[Chi][x,t,Subscript[i, 1],Subscript[\[Alpha], 1]] \[Chi]s[x,t,Subscript[i, 1],Subscript[\[Alpha], 1]],\[Psi]s[x,t]},FullSimplify];If[OptionValue["print"],Print[Style["\t \[Gamma]g-interaction action \!\(\*SubscriptBox[\(S\), \(\(\[Gamma]g\)\( \)\)]\)= ",{Blue}],g \[Gamma]gAction,"\n"]];Print[Style["\t \[Gamma]g-interaction action after purification with ",{Blue,Bold}],Style[{\[Delta]t->0,\[Delta]x->0},{Blue}],Style["\n \!\(\*SubscriptBox[\(S\), \(\(\[Gamma]g\)\( \)\)]\)-> ",{Blue,Bold}],g \[Gamma]gAction/. {\[Delta]t->0,\[Delta]x->0},"\n"];
];

Return[\[CapitalMu]Action];
]



